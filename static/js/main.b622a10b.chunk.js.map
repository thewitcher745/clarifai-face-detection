{"version":3,"sources":["components/logo/logo.png","components/logo/logo.js","components/imageLinkForm/imageLinkForm.js","components/faceRecognition/faceBoxes.js","components/faceRecognition/faceRecognition.js","components/modal/modal.js","components/loadingMessage.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","brain","require","default","className","options","max","reverse","style","height","width","src","alt","paddingTop","ImageLinkForm","onInputChange","onSubmit","type","onChange","id","onClick","FaceBoxes","regionData","isImgLoaded","image","document","getElementById","length","map","regionID","i","leftCol","region_info","bounding_box","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","left","right","top","bottom","value","FaceRecognition","imageUrl","show","imgLoaded","onLoad","Modal","this","props","closeModal","React","Component","LoadingMessage","message","particlesOptions","particles","number","density","enable","value_area","size","move","speed","out_mode","interactivity","events","onhover","mode","modes","bubble","distance","duration","opacity","app","Clarifai","App","apiKey","setFaceLocations","data","clarifaiFaceRegions","outputs","regions","setState","event","console","log","input","showLoadingMessage","models","predict","FACE_DETECT_MODEL","then","response","catch","error","state","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.b622a10b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.88caec61.png\";","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\n\r\nconst Logo = () => {\r\n  const brain = require(\"./logo.png\").default;\r\n  return (\r\n    <div className=\"ma4 mt0 center\">\r\n      <Tilt\r\n        className=\"Tilt br2 o-80\"\r\n        options={{ max: 35, reverse: false }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner pa2\">\r\n          <img\r\n            src={brain}\r\n            alt=\"SmartBrain Logo\"\r\n            style={{ paddingTop: \"5px\" }}\r\n          ></img>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./imageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3 ma3\">\r\n        {\"This Magic Brain will detect faces in your pictures. Give it a try!\"}\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"form center pa4 br3 shadow-5 ba\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"f4 pa2 w-70\"\r\n            onChange={onInputChange}\r\n            id=\"input\"\r\n          />\r\n          <button className=\"w-30 grow f4 link ph3 pv2 dib\" onClick={onSubmit}>\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\nimport \"./faceBoxes.css\";\r\n\r\nconst FaceBoxes = ({ regionData, isImgLoaded }) => {\r\n  var image = document.getElementById(\"inputimage\");\r\n  if (regionData.length > 0 && isImgLoaded) {\r\n    const width = image.width;\r\n    const height = image.height;\r\n    const output = regionData.map((regionID, i) => {\r\n      var leftCol = regionID.region_info.bounding_box.left_col * width;\r\n      var topRow = regionID.region_info.bounding_box.top_row * height;\r\n      var rightCol =\r\n        width - regionID.region_info.bounding_box.right_col * width;\r\n      var bottomRow =\r\n        height - regionID.region_info.bounding_box.bottom_row * height;\r\n      return (\r\n        <div\r\n          className=\"face-box\"\r\n          key={i}\r\n          style={{\r\n            left: leftCol,\r\n            right: rightCol,\r\n            top: topRow,\r\n            bottom: bottomRow,\r\n          }}\r\n        >\r\n          <div className=\"value-label\">{regionID.value}</div>\r\n        </div>\r\n      );\r\n    });\r\n    return output;\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default FaceBoxes;\r\n","import React from \"react\";\r\nimport FaceBoxes from \"./faceBoxes.js\";\r\n\r\nconst FaceRecognition = ({\r\n  imageUrl,\r\n  regionData,\r\n  show,\r\n  imgLoaded,\r\n  isImgLoaded,\r\n}) => {\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"absolute mt2 w-75\">\r\n        <img\r\n          alt=\"\"\r\n          src={imageUrl}\r\n          width=\"800\"\r\n          height=\"auto\"\r\n          id=\"inputimage\"\r\n          onLoad={imgLoaded}\r\n        ></img>\r\n        <FaceBoxes\r\n          isImgLoaded={isImgLoaded}\r\n          show={show}\r\n          regionData={regionData}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport FaceRecognition from \"../faceRecognition/faceRecognition.js\";\r\n\r\nexport default class Modal extends React.Component {\r\n  render() {\r\n    if (!this.props.show || !this.props.imageUrl) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div id=\"full-page\">\r\n        <div className=\"modal\">\r\n          <div>\r\n            <FaceRecognition\r\n              regionData={this.props.regionData}\r\n              imageUrl={this.props.imageUrl}\r\n              show={this.props.show}\r\n              imgLoaded={this.props.imgLoaded}\r\n              isImgLoaded={this.props.isImgLoaded}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"grow f4 link ph3 pv2 dib\"\r\n            onClick={this.props.closeModal}\r\n            id=\"btn-close-modal\"\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./loadingMessage.css\";\r\n\r\nconst LoadingMessage = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"loading-message f2\">{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingMessage;\r\n","import React from \"react\";\nimport Navigation from \"./components/navigation/navigation.js\";\nimport Logo from \"./components/logo/logo.js\";\nimport ImageLinkForm from \"./components/imageLinkForm/imageLinkForm.js\";\nimport Rank from \"./components/rank/rank.js\";\nimport Modal from \"./components/modal/modal.js\";\nimport Particles from \"react-particles-js\";\nimport LoadingMessage from \"./components/loadingMessage.js\";\nimport \"./App.css\";\nimport Clarifai from \"clarifai\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n    size: {\n      value: 2,\n    },\n    move: {\n      speed: 2,\n      out_mode: \"out\",\n    },\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"bubble\",\n      },\n    },\n    modes: {\n      bubble: {\n        distance: 400,\n        size: 5,\n        duration: 2,\n        opacity: 5,\n        speed: 10,\n      },\n    },\n  },\n};\n\nconst app = new Clarifai.App({\n  apiKey: \"3ccb75a61e104c53b8d3d06047bc0008\",\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.input = \"\";\n    this.state = {\n      show: false,\n      message: \"\",\n      imageUrl: \"\",\n      regions: {},\n      isImgLoaded: false,\n    };\n  }\n\n  setFaceLocations = (data) => {\n    const clarifaiFaceRegions = data.outputs[0].data.regions;\n    this.setState({ regions: clarifaiFaceRegions });\n  };\n\n  onInputChange = (event) => {\n    console.log(\"input:\", this.input);\n  };\n\n  onSubmit = () => {\n    this.showLoadingMessage();\n    this.input = document.getElementById(\"input\").value;\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.input)\n      .then((response) => {\n        this.setFaceLocations(response);\n        this.setState({\n          imageUrl: this.input,\n          show: true,\n        });\n      })\n      .catch((error) => {\n        this.setState({ message: \"Error connecting to API, check your link!\" });\n      });\n  };\n\n  closeModal = () => {\n    this.setState({ show: false, isImgLoaded: false });\n  };\n\n  showLoadingMessage = () => {\n    this.setState({ message: \"Connecting to API...\" });\n  };\n\n  imgLoaded = () => {\n    this.setState({ message: \"\", isImgLoaded: true });\n  };\n\n  render() {\n    console.log(\"rendering App...\");\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        {/* <Navigation /> */}\n        <Logo />\n        {/* <Rank /> */}\n        <ImageLinkForm onSubmit={this.onSubmit} />\n        <LoadingMessage message={this.state.message} />\n        <Modal\n          show={this.state.show}\n          imageUrl={this.state.imageUrl}\n          regionData={this.state.regions}\n          closeModal={this.closeModal}\n          imgLoaded={this.imgLoaded}\n          isImgLoaded={this.state.isImgLoaded}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}